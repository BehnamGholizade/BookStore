@model string
@{
    ViewData["Title"] = "Search Result";
}

@* Kendo Client Template load *@
@await Html.PartialAsync("~/Templates/bookListViewTmpl.cshtml")

<div class="alert alert-success" role="alert">
    <strong id="countElement"></strong> books found for request <strong>"@Model"</strong>
</div>

<div class="k-content">
    @(Html.Kendo().ListView<IEnumerable<Book>>()
        .Name("bookListView") //"id" of the widget
        .TagName("div") //element which wraps all ListView items
        .ClientTemplateId("bookListViewTmpl") //template for rendering the ListView items
        .DataSource(dataSource =>
        {
            dataSource.Ajax()
            .PageSize(48)
            .Read(read => read.Action("ReadSearchResult", "Books")
            .Type(HttpVerbs.Get)) //otherwise POST 404
            .Events(events =>
            {
                events.Change("onListViewChange");
                events.RequestStart("onRequestStart");
                events.RequestEnd("onRequestEnd");
            });
        }).Pageable()
    )
</div>
<script>
    //count records
    function onListViewChange() {
        var listView = $("#bookListView").data("kendoListView");
        var count = listView.dataSource.total();
        $("#countElement").html(count);
        //alert(count);
    }
</script>
<script>
    //refresh navbar cartSummary
    //should use the on() method, not click()!
    $('#bookListView').on("click", "input.submit-btn", function (e) {
        var datastring = $(this).closest('form').serialize();
        $.ajax({
            type: "POST",
            url: "/Cart/AddToCart",
            data: datastring,
            success: function (response) {
                $("#cartSummary").html(response)
            }
        });
        e.preventDefault();
    });
</script>